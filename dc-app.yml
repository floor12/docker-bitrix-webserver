version: '3'
services:
  mysql:
    image: mysql:8.0.33
    container_name: wDatabase
    restart: always
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    volumes:
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ./database:/var/lib/mysql
    networks:
      - backend
    ports:
      - "3311:3306"

  php:
    container_name: wApplication
    restart: always
    tty: true
    build:
      context: ./.docker
      dockerfile: php.Dockerfile
    environment:
      SMTP_CONTAINER: mail
      SMTP_EMAIL: ${MAIL_SMTP_USER}
    expose:
      - "9000"
    working_dir: /var/webserver/www
    volumes:
      - ./bitrix:/var/webserver/www/public/
      - ./log:/var/webserver/log
    networks:
      - backend
    depends_on:
      - mysql

  nginx:
    container_name: wNginx
    restart: always
    build:
      context: ./.docker
      dockerfile: nginx.Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-webserver}
    volumes:
      - ./bitrix:/var/webserver/www/public
      - ./log:/var/webserver/log
    environment:
      - APP_NAME=${APP_NAME}
    networks:
      frontend:
      backend:
        aliases:
          - ${APP_NAME}
    depends_on:
      - php
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.bitrix.entrypoints=web"
      - "traefik.http.routers.bitrix.rule=Host(`restore.transfix.su`)"
      - "traefik.http.routers.mail.middlewares=redirect-from-www@file,redirect-to-https@file"

      - "traefik.http.routers.bitrix_tls.tls.certresolver=production"
      - "traefik.http.routers.bitrix_tls.entrypoints=websecure"
      - "traefik.http.routers.bitrix_tls.rule=Host(`restore.transfix.su`)"
      - "traefik.http.routers.bitrix_tls.tls=true"
      - "traefik.http.routers.bitrix_tls.middlewares=redirect-from-www@file"


  composer:
    container_name: wComposer
    restart: "no"
    build:
      context: ./.docker
      dockerfile: composer.Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-webserver}
    working_dir: /var/webserver/www
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    volumes:
      - ./app:/var/webserver/www

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
